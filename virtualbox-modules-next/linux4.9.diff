--- a/vboxdrv/SUPDrvInternal.h
+++ b/vboxdrv/SUPDrvInternal.h
@@ -65,7 +65,7 @@
 #           include <linux/modversions.h>
 #       endif
 #   endif
-#   if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 0)
+#   if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 0) && LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 0)
 #       undef ALIGN
 #   endif
 #   ifndef KBUILD_STR
--- a/vboxdrv/r0drv/linux/memobj-r0drv-linux.c
+++ b/vboxdrv/r0drv/linux/memobj-r0drv-linux.c
@@ -1050,7 +1050,9 @@ DECLHIDDEN(int) rtR0MemObjNativeLockUser(PPRTR0MEMOBJINTERNAL ppMem, RTR3PTR R3P
             rc = get_user_pages(R3Ptr,                  /* Where from. */
                                 cPages,                 /* How many pages. */
                                 fWrite,                 /* Write to memory. */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 0)
                                 fWrite,                 /* force write access. */
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 0) */
                                 &pMemLnx->apPages[0],   /* Page array. */
                                 papVMAs);               /* vmas */
         /*
@@ -1064,7 +1066,9 @@ DECLHIDDEN(int) rtR0MemObjNativeLockUser(PPRTR0MEMOBJINTERNAL ppMem, RTR3PTR R3P
                                 R3Ptr,                  /* Where from. */
                                 cPages,                 /* How many pages. */
                                 fWrite,                 /* Write to memory. */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 0)
                                 fWrite,                 /* force write access. */
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 0) */
                                 &pMemLnx->apPages[0],   /* Page array. */
                                 papVMAs);               /* vmas */
 #else /* LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0) */
